{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["goodsFromServer","GoodsList","goodsArray","useState","goods","setGoods","isReverseSort","setReverseSort","isAlphabetSort","setAlphabetSort","isLengthSort","setLengthSort","renderingGoods","sort","a","b","localeCompare","length","reverse","className","type","onClick","map","good","App","showedGoods","setVisibility","ReactDOM","render","document","getElementById"],"mappings":"8PAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAY,WACvB,IAwBmBC,EAxBnB,EAA0BC,mBAASH,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAqBC,EAArB,KAqCMC,GAhBaV,EAgBc,YAAIE,GAf/BI,EACKN,EAAWW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG/CL,EACKR,EAAWW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAG5CX,EACKJ,EAAWgB,UAGbhB,GAKT,OACE,sBAAKiB,UAAU,YAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBACEC,KAAK,SACLC,QA1CY,WAClBd,GAAgBD,IA0CVa,UAAU,mDAHZ,qBAOA,wBACEC,KAAK,SACLC,QA7Ca,WACnBZ,GAAiBD,IA6CXW,UAAU,oDAHZ,iCAOA,wBACEC,KAAK,SACLC,QAhDW,WACjBV,GAAeD,IAgDTS,UAAU,kDAHZ,4BAOA,wBACEC,KAAK,SACLC,QAnDM,WACZhB,EAASL,GACTO,GAAe,GACfE,GAAgB,GAChBE,GAAc,IAgDRQ,UAAU,iDAHZ,2BAQF,oBAAIA,UAAU,kBAAd,SACGP,EAAeU,KAAI,SAAAC,GAAI,OACtB,oBAAeJ,UAAU,kBAAzB,SACGI,GADMA,YC5DJC,EA7BO,WACpB,MAAqCrB,oBAAS,GAA9C,mBAAOsB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKP,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBAEEM,EAEI,cAAC,EAAD,IAGA,wBACEL,KAAK,SACLC,QAfM,WAChBK,GAAeD,IAeLN,UAAU,cAHZ,uBCjBZQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac176654.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './GoodsList.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const GoodsList = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [isReverseSort, setReverseSort] = useState(false);\n  const [isAlphabetSort, setAlphabetSort] = useState(false);\n  const [isLengthSort, setLengthSort] = useState(false);\n\n  const reverseSort = () => {\n    setReverseSort(!isReverseSort);\n  };\n\n  const alphabetSort = () => {\n    setAlphabetSort(!isAlphabetSort);\n  };\n\n  const lengthSort = () => {\n    setLengthSort(!isLengthSort);\n  };\n\n  const reset = () => {\n    setGoods(goodsFromServer);\n    setReverseSort(false);\n    setAlphabetSort(false);\n    setLengthSort(false);\n  };\n\n  const sortGoods = (goodsArray: string[]): string[] => {\n    if (isAlphabetSort) {\n      return goodsArray.sort((a, b) => a.localeCompare(b));\n    }\n\n    if (isLengthSort) {\n      return goodsArray.sort((a, b) => a.length - b.length);\n    }\n\n    if (isReverseSort) {\n      return goodsArray.reverse();\n    }\n\n    return goodsArray;\n  };\n\n  const renderingGoods = sortGoods([...goods]);\n\n  return (\n    <div className=\"goodsMenu\">\n      <div className=\"goodsMenu__buttons\">\n        <button\n          type=\"button\"\n          onClick={reverseSort}\n          className=\"goodsMenu__button goodsMenu__button--reverseSort\"\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={alphabetSort}\n          className=\"goodsMenu__button goodsMenu__button--alphabetSort\"\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={lengthSort}\n          className=\"goodsMenu__button goodsMenu__button--lengthSort\"\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          onClick={reset}\n          className=\"goodsMenu__button goodsMenu__button--resetSort\"\n        >\n          Reset sort\n        </button>\n      </div>\n      <ul className=\"goodsMenu__list\">\n        {renderingGoods.map(good => (\n          <li key={good} className=\"goodsMenu__item\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst App: React.FC = () => {\n  const [showedGoods, setVisibility] = useState(false);\n\n  const showGoods = () => {\n    setVisibility(!showedGoods);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Goods</h1>\n      {\n        showedGoods\n          ? (\n            <GoodsList />\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={showGoods}\n              className=\"App__button\"\n            >\n              Start\n            </button>\n          )\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}